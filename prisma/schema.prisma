// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum UserType {
    admin
    customer
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @db.Uuid
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @db.Uuid
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
    id                String              @db.Uuid @id @default(uuid())
    name              String              @db.Text
    username          String              @unique @db.VarChar(255)
    password          String              @db.Text
    email             String?             @unique @db.VarChar(255)
    emailVerified     DateTime?
    userType          UserType
    active            Boolean             @default(false)
    image             String?             @db.Text
    created_at        DateTime            @default(now())
    updated_at        DateTime            @default(now()) @updatedAt
    deleted_at        DateTime?

    accounts          Account[]
    sessions          Session[]

    @@map("user")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model CustomerVerification {
    id              String              @db.Uuid @id @default(uuid())
    user_id         String              @db.Uuid
    image           String              @db.Text
    created_at      DateTime            @default(now())
    updated_at      DateTime            @default(now()) @updatedAt
    deleted_at      DateTime?

    @@map("customer_verification")
}

model Banner {
    id              String              @db.Uuid @id @default(uuid())
    name            String              @db.VarChar(255)
    description     String              @db.Text
    image           String              @db.VarChar(255)
    active          Boolean             @default(false)
    created_at      DateTime            @default(now())
    updated_at      DateTime            @default(now()) @updatedAt
    deleted_at      DateTime?

    @@map("banner")
}

model Product {
    id              String              @db.Uuid @id @default(uuid())
    name            String              @db.VarChar(255)
    description     String              @db.Text
    price           Int         
    stock           Int        
    image           String              @db.VarChar(255)
    active          Boolean             @default(false)
    created_at      DateTime            @default(now())
    updated_at      DateTime            @default(now()) @updatedAt
    deleted_at      DateTime?

    @@map("product")
}